/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javaapplication1.JDCortes.txthorafin;
import static javaapplication1.JDCortes.txthorainicio;
import static javaapplication1.JDSalidas.linea;
import javax.swing.Timer;
import simplemysql.SimpleMySQL;
import simplemysql.SimpleMySQLResult;

/**
 *
 * @author Jonatan
 */
public class JDCorte extends javax.swing.JDialog {
 public static String series="";
    /**
     * Creates new form JDCorte
     */
    public JDCorte(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        SimpleDateFormat sdfa = new SimpleDateFormat("YYYY-MM-dd HH:mm:ss");
        
        
        new Timer(1000, new ActionListener() {
            
        @Override
        public void actionPerformed(ActionEvent e) {
            Calendar cal = Calendar.getInstance();
    	cal.getTime();
        jLabel9.setText(sdfa.format(cal.getTime()));
        }
    }).start();
        
        
        SimpleMySQL mysql;
        mysql = new SimpleMySQL();
        mysql.connect("localhost", "root", "x4899954", "estacionamientos");
        SimpleMySQLResult rs;
        rs = mysql.Query ("SELECT * FROM cortes WHERE FECHAFIN IS NULL");
        while (rs.next()){
                        jLabel1.setText(rs.getString("USUARIO"));
                        jLabel8.setText(rs.getString("FECHAINICIO"));
            
         }
       
rs.close();
        mysql.close();
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jCheckBox3 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        seriea = new javax.swing.JCheckBox();
        serieb = new javax.swing.JCheckBox();

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Usuario Actual");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Usuario Actual");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Fecha de Inicio");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Corte"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Usuario Actual");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Fin");

        jCheckBox2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jCheckBox2.setSelected(true);
        jCheckBox2.setText("Imprimir Corte");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jButton1.setText("Cerrar Corte");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jCheckBox3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jCheckBox3.setText("Imprimir solo totales");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Usuario Actual");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Inicio");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Fecha de Inicio");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Fecha de Inicio");

        seriea.setSelected(true);
        seriea.setText("A");

        serieb.setSelected(true);
        serieb.setText("B");
        serieb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seriebActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2))
                                .addGap(78, 78, 78)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jCheckBox2)
                                .addGap(18, 18, 18)
                                .addComponent(seriea)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                                .addComponent(serieb))
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCheckBox3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox2)
                    .addComponent(seriea)
                    .addComponent(serieb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
SimpleMySQL mysql;
        mysql = new SimpleMySQL();
        mysql.connect("localhost", "root", "x4899954", "estacionamientos");
       
         mysql.Query ("UPDATE cortes SET FECHAFIN= \""+jLabel9.getText()+"\" WHERE FECHAFIN IS NULL");
         mysql.Query ("UPDATE estacionados SET USUARIOCORTE= \""+JDLogin.elusuario+"\"  WHERE USUARIOCORTE IS NULL AND ESTATUS != \"Registro\" ");
        
       

        mysql.close();
        this.dispose();    
        
        
        if(jCheckBox2.isSelected()){
        
        
         PrinterJob job = PrinterJob.getPrinterJob();
          PageFormat pf = job.defaultPage();  
          
            Paper paper = new Paper();  
            paper.setImageableArea(0, 0, paper.getWidth(), paper.getHeight());  
            pf.setPaper(paper);  
            
            job.setPrintable( new JDCorte.MiPrintable(),pf);
            
try 
{
        if (seriea.isSelected()&&!serieb.isSelected()) {
              series="AND SERIE = \"A\"";
              job.print();
          }else if(!seriea.isSelected()&&serieb.isSelected()){
              series="AND SERIE = \"B\"";
              job.print();
          }else if(seriea.isSelected()&&serieb.isSelected()){
          series="AND SERIE = \"A\"";
              job.print();
               series="AND SERIE = \"B\"";
              job.print();
              
          }     
   
  
   } 
catch (PrinterException es) 
{
   es.printStackTrace();
}
        
        
        
        
        
        
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void seriebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seriebActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seriebActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDCorte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDCorte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDCorte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDCorte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        
        
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDCorte dialog = new JDCorte(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
   class MiPrintable implements Printable 
{      
       public int lineamax=999999999;
       public int lineamax1=999999999;
          int avance=0;
   String pagados="";
   String toleranciasc="";
        String tpagados="";
        String pagados2="";
        String tpagados2="";
        String pagados3="";
        String tpagados3="";
                 String inicial=jLabel8.getText();
        String terminal=jLabel9.getText();
        String folios="";
        int lapagina=1;
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat dateFormat2 = new SimpleDateFormat("dd/MM/yy");
      
   public int print (Graphics g, PageFormat f, int pageIndex) 
   {
         java.text.DecimalFormat nft = new  
  java.text.DecimalFormat("#000000.###"); 
   
       
      if (pageIndex == 0) 
      {
         

    Image img1 = Toolkit.getDefaultToolkit().getImage("C:/Estacionamientos/LogoTicket.jpg");
    g.drawImage(img1, 0, 0, 290, 30, null);
          
          g.setFont(new Font("Arial", Font.BOLD, 12));  

       
        
          SimpleMySQL mysql;
        mysql = new SimpleMySQL();
        mysql.connect("localhost", "root", "x4899954", "estacionamientos");
        SimpleMySQLResult rs;
         SimpleMySQLResult rs2;
         SimpleMySQLResult rs3;
        rs = mysql.Query ("SELECT * FROM opciones WHERE ID = 2");
        while (rs.next()){ String str =rs.getString("VALOR");
                        drawStringMultiLine(g, str, 295, 10, 50);
                      } rs.close();
        
                
                      
        rs = mysql.Query ("SELECT * FROM cortes WHERE FECHAINICIO = \""+inicial+"\" AND FECHAFIN = \""+terminal+"\" ");
         g.setFont(new Font("Arial", Font.BOLD, 12));
        linea=linea+4;
        g.drawString("CORTE DE CAJA", 80,linea);
        while (rs.next()){ 
        g.drawString(rs.getString("ID"), 180,linea);
                       
                      } rs.close();
        g.drawString("______________________________________________", 10,++linea);
        rs = mysql.Query ("SELECT * FROM estacionados WHERE ENTRADA >= \""+inicial+"\" AND ENTRADA <= \""+terminal+"\" "+series+" ORDER BY ID DESC ");
        g.setFont(new Font("Arial", Font.BOLD, 13));
        DateFormat df = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                linea=linea+20;
         g.setFont(new Font("Arial", Font.BOLD, 12));
 g.drawString("IMPRESION DE REPORTE: "+df.format(new Date()), 10,linea);
        g.setFont(new Font("Arial", Font.BOLD, 14));
        linea=linea+20;
            DateFormat fold = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
         DateFormat fnew = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
          try {
              g.drawString("DEL: "+fnew.format(fold.parse(inicial.replace(".0", ""))), 20,linea);
          } catch (ParseException ex) {
              Logger.getLogger(JDCortes.class.getName()).log(Level.SEVERE, null, ex);
          }
        linea=linea+13;
          try {
              g.drawString("AL: "+fnew.format(fold.parse(terminal.replace(".0", ""))), 30,linea);
          } catch (ParseException ex) {
              Logger.getLogger(JDCortes.class.getName()).log(Level.SEVERE, null, ex);
          }
        linea=linea+4;

 
nft.setDecimalSeparatorAlwaysShown(false); 
        linea=linea+15;
 rs = mysql.Query ("SELECT * FROM estacionados WHERE ENTRADA >= \""+inicial+"\" AND ENTRADA <= \""+terminal+"\" "+series+"  ORDER BY ID ASC LIMIT 1 ");
  
          if (rs.next()) {
              rs = mysql.Query ("SELECT * FROM estacionados WHERE ENTRADA >= \""+inicial+"\" AND ENTRADA <= \""+terminal+"\" "+series+"  ORDER BY ID ASC LIMIT 1 ");
         while (rs.next()){  
       g.drawString("F. INICIAL: ", 10,linea); 
       g.drawString(rs.getString("SERIE")+nft.format(Integer.parseInt(rs.getString("TICKET"))), 90,linea); 

        }
          }else{
          rs = mysql.Query ("SELECT * FROM estacionados WHERE \"x\"=\"x\"  "+series+"  ORDER BY ID DESC LIMIT 1 ");
           while (rs.next()){  
       g.drawString("F. INICIAL: ", 10,linea); 
       g.drawString(rs.getString("SERIE")+nft.format(Integer.parseInt(rs.getString("TICKET"))), 90,linea); 

        }
          }
      
 rs = mysql.Query ("SELECT * FROM estacionados WHERE ENTRADA >= \""+inicial+"\" AND ENTRADA <= \""+terminal+"\"  "+series+"  ORDER BY ID DESC LIMIT 1 ");
   if (rs.next()) {
       rs = mysql.Query ("SELECT * FROM estacionados WHERE ENTRADA >= \""+inicial+"\" AND ENTRADA <= \""+terminal+"\"  "+series+"  ORDER BY ID DESC LIMIT 1 ");
         while (rs.next()){  
       g.drawString("F. FINAL: ", 160,linea); 
       g.drawString(rs.getString("SERIE")+nft.format(Integer.parseInt(rs.getString("TICKET"))), 240,linea); 
        }
          }else{
          rs = mysql.Query ("SELECT * FROM estacionados WHERE \"x\"=\"x\"  "+series+"  ORDER BY ID DESC LIMIT 1 ");
           while (rs.next()){  
       g.drawString("F. FINAL: ", 160,linea); 
       g.drawString(rs.getString("SERIE")+nft.format(Integer.parseInt(rs.getString("TICKET"))), 240,linea); 
        }
          }


       
         rs = mysql.Query ("SELECT * FROM estacionados WHERE ENTRADA >= \""+inicial+"\" AND ENTRADA <= \""+terminal+"\"  "+series+"  ORDER BY ID DESC");
        int contando=0;
        int total=0;
        int contando2=0;
        int total2=0;
        int tolerancias=0;
        while (rs.next()){ 
        if(Integer.parseInt(rs.getString("IMPORTE"))==0){
        tolerancias++;
        }else{
        contando++;
        }  
        total=total+Integer.parseInt(rs.getString("IMPORTE"));
        } rs.close();  
         if (series.equals("AND SERIE = \"B\"")) {
         rs = mysql.Query ("SELECT * FROM estacionados WHERE ENTRADA >= \""+inicial+"\" AND ENTRADA <= \""+terminal+"\"  AND SERIE = \"A\" ORDER BY ID DESC ");
        while (rs.next()){  
        contando2++;
        total2=total2+Integer.parseInt(rs.getString("IMPORTE"));
        } rs.close(); 
         
        
         }
        
        pagados=  Integer.toString(contando);
        tpagados=Integer.toString(total);
        toleranciasc=Integer.toString(tolerancias);
        folios=Integer.toString(tolerancias+contando);
        pagados2=  Integer.toString(contando2);
        tpagados2=Integer.toString(total2);
        pagados3=  Integer.toString(contando2+contando);
        tpagados3=Integer.toString(total2+total);
        linea=linea+20;
        g.drawString("TOTAL FOLIOS: ", 10,linea);
        linea=linea+20;
         g.drawString("______________________________________________", 10,linea); 
        g.drawString(folios, 210,linea);
        linea=linea+15;
        g.drawString("TOLERANCIAS: ", 10,linea);
        g.drawString(toleranciasc, 210,linea);
        linea=linea+15;
        g.drawString("PAGADOS: ", 10,linea);
        g.drawString(Integer.toString(contando), 210,linea);
        g.drawString("$"+Integer.toString(total), 240,linea);
        rs = mysql.Query ("SELECT * FROM estacionados WHERE ENTRADA >= \""+inicial+"\" AND ENTRADA <= \""+terminal+"\" AND ESTATUS =\"CANCELADO\" "+series+"  ORDER BY ID DESC ");
        contando=0;
        total=0;
        while (rs.next()){  
        contando++;
        } rs.close();  
        linea=linea+15;
        g.drawString("CANCELADOS: ", 10,linea);
        g.drawString(Integer.toString(contando), 210,linea);

        
        rs = mysql.Query ("SELECT DISTINCT TARIFA FROM estacionados WHERE ENTRADA >= \""+inicial+"\" AND ENTRADA <= \""+terminal+"\"  "+series+"  ORDER BY ID DESC ");
linea=linea+15;
        
         while (rs.next()){  
             
             rs3 = mysql.Query ("SELECT * FROM tarifas WHERE DESCRIPCION = \""+rs.getString("TARIFA")+"\" ");
             while (rs3.next()){
                 
        g.drawString("T"+rs3.getString("ID")+"  "+rs.getString("TARIFA")+":", 30,linea);
             }
        
        rs2 = mysql.Query ("SELECT * FROM estacionados WHERE ENTRADA >= \""+inicial+"\" AND ENTRADA <= \""+terminal+"\" AND TARIFA=\""+rs.getString("TARIFA")+"\"  "+series+"  ORDER BY ID DESC ");
        contando=0;
        total=0;
        while (rs2.next()){  
        contando++;
        
        total=total+Integer.parseInt(rs2.getString("IMPORTE"));
        } rs2.close(); 
        g.drawString(Integer.toString(contando), 210,linea);
        g.drawString("$"+Integer.toString(total), 240,linea);
        linea=linea+15;
        } rs.close();  
        
         rs = mysql.Query ("SELECT * FROM estacionados WHERE ENTRADA >= \""+inicial+"\" AND ENTRADA <= \""+terminal+"\" AND SALIDA IS NULL "+series+"  ORDER BY ID DESC ");
        g.drawString("ESTACIONADOS: "+rs.getNumRows(), 10,linea);
        g.drawString("PENSIONES: 0", 140,linea);
        rs2 = mysql.Query ("SELECT * FROM estacionados WHERE ENTRADA >= \""+inicial+"\" AND ENTRADA <= \""+terminal+"\" AND ESTATUS =\"BOLETOPERDIDO\" "+series+"  ORDER BY ID DESC ");
      linea=linea+15;
         g.drawString("PERDIDOS: "+rs2.getNumRows(), 10,linea);
        linea=linea+15;
         g.drawString("RESP.DE TURNO: "+JDLogin.elusuario, 10,linea);
         linea=linea+15;
        

    g.setFont(new Font("Arial", Font.BOLD, 12));
        g.drawString("______________________________________________", 10,linea); 
g.setFont(new Font("Arial", Font.BOLD, 12));

 
nft.setDecimalSeparatorAlwaysShown(false); 

  rs = mysql.Query ("SELECT * FROM estacionados WHERE ENTRADA >= \""+inicial+"\" AND ENTRADA <= \""+terminal+"\" "+series+"  ORDER BY ID DESC ");
   
linea=linea+15;
if(jCheckBox3.isSelected()){}else{
avance=1;

        
}
         
      }else{
          
     linea=15;
            if(pageIndex==0){
                return PAGE_EXISTS;
       }
      }
                 SimpleMySQL mysql;
        mysql = new SimpleMySQL();
        mysql.connect("localhost", "root", "x4899954", "estacionamientos");
        SimpleMySQLResult rs;
         SimpleMySQLResult rs2;
         SimpleMySQLResult rs3;
      if(avance==1){
           
          
            rs = mysql.Query ("SELECT * FROM estacionados WHERE ENTRADA >= \""+inicial+"\" AND ENTRADA <= \""+terminal+"\" "+series+" AND ID < "+lineamax+" ORDER BY ID DESC ");
            g.setFont(new Font("Arial", Font.BOLD, 12));
  while (rs.next()){  
      if(pageIndex!=0){
      rs3 = mysql.Query ("SELECT * FROM tarifas WHERE DESCRIPCION = \""+rs.getString("TARIFA")+"\" ");
             while (rs3.next()){
                 if (rs.getString("ESTATUS").equals("CANCELADO")) {
                     g.drawString("CA:", 10,linea);
                 }else{
        g.drawString("T"+rs3.getString("ID")+":", 10,linea);
                 }
             }
g.drawString(rs.getString("SERIE")+nft.format(Integer.parseInt(rs.getString("TICKET"))) , 30,linea);
      if (rs.getString("ESTATUS").equals("BOLETOPERDIDO")) {
       g.drawString("BP" , 100,linea);   
      }
g.drawString(rs.getString("PLACAS") , 120,linea);
g.drawString(rs.getString("TIEMPO") , 180,linea);
g.drawString("$"+rs.getString("IMPORTE")+".00" , 240,linea);
      }
linea=linea+15;
if(linea>=672){


       if(pageIndex>lapagina){
            lineamax=Integer.parseInt(rs.getString("ID"));
           lapagina=pageIndex;
       }
   
    System.out.println("_____________________________");
    System.out.println("Terminó en el TICKET: ");
    System.out.println(rs.getString("TICKET"));
    System.out.println(pageIndex);
    System.out.println("_____________________________");
    return PAGE_EXISTS;
}
        }    
        
g.setFont(new Font("Arial", Font.BOLD, 12));
g.drawString("TOTAL PAGADOS:                   "+pagados , 10,linea);
g.drawString("$"+tpagados+".00" , 240,linea);
linea=linea+20;
g.drawString("----ESTACIONADOS-----", 10,linea);
linea=linea+15;
 rs = mysql.Query ("SELECT * FROM estacionados WHERE ENTRADA >= \""+inicial+"\" AND ENTRADA <= \""+terminal+"\" AND SALIDA IS NULL "+series+"  ORDER BY ID DESC ");
 while (rs.next()){  
g.drawString(rs.getString("SERIE")+nft.format(Integer.parseInt(rs.getString("TICKET"))) , 10,linea);
g.drawString(rs.getString("PLACAS") , 80,linea);
g.drawString(rs.getString("ENTRADA").replace("-", "/") , 140,linea);
linea=linea+15;
        } 
 g.drawString("TOTAL ESTACIONADOS:                   "+rs.getNumRows() , 10,linea);
          
 
    if (series=="AND SERIE = \"B\"") {
        linea=linea+15;
        g.drawString("TOTAL PAGADOS A:         "+pagados2+"          $"+tpagados2 , 10,linea);
        linea=linea+15;
        g.drawString("TOTAL PAGADOS B:         "+pagados+"          $"+tpagados, 10,linea);
        linea=linea+15;
        g.drawString("TOTAL PAGADOS:           "+pagados3+"          $"+tpagados3, 10,linea);
    } rs.close();
                avance=0;
                 return PAGE_EXISTS;
         
      }else if(avance==0){
          avance=3;
          return PAGE_EXISTS;
       
      }else{
      return NO_SUCH_PAGE;
      }
   }
   
}
public static void drawStringMultiLine(Graphics g, String text, int lineWidth, int x, int y) {
    FontMetrics m = g.getFontMetrics();
    if(m.stringWidth(text) < lineWidth) {
        g.drawString(text, x, y);
    } else {
        String[] words = text.split(" ");
        String currentLine = words[0];
        for(int i = 1; i < words.length; i++) {
            if(m.stringWidth(currentLine+words[i]) < lineWidth) {
                currentLine += " "+words[i];
            } else {
                g.drawString(currentLine, x, y);
                y += m.getHeight();
                currentLine = words[i];
                linea=y+m.getHeight();
            }
        }
        if(currentLine.trim().length() > 0) {
            g.drawString(currentLine, x, y);
        }
    }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JCheckBox seriea;
    private javax.swing.JCheckBox serieb;
    // End of variables declaration//GEN-END:variables
}
